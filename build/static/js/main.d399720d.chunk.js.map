{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","axios","get","then","response","data","newObject","post","id","put","Notification","message","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","console","log","length","notesToShow","filter","Footer","style","color","fontStyle","fontSize","map","i","key","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"wNAaiBA,EAXJ,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UACf,qBAAuB,iBAE3B,OACE,wBAAIC,UAAU,QACXJ,EAAKK,QACN,4BAAQC,QAASL,GAAmBC,K,gBCS3B,EAfA,WAEb,OADgBK,IAAMC,IAHR,cAICC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa5B,EAVA,SAAAC,GAEb,OADgBL,IAAMM,KARR,aAQsBD,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAbF,aAaE,YAAwBD,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCD1BK,EAZI,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAgB,OAAZA,EACK,KAIP,yBAAKb,UAAU,SACZa,ICqGMC,G,MAxGH,SAACC,GAAW,IAAD,EACKC,mBAAS,IADd,mBACdC,EADc,KACPC,EADO,OAESF,mBAAS,IAFlB,mBAEdG,EAFc,KAELC,EAFK,OAGSJ,oBAAS,GAHlB,mBAGdK,EAHc,KAGLC,EAHK,OAImBN,mBAAS,0BAJ5B,mBAIdO,EAJc,KAIAC,EAJA,KAMrBC,qBAAU,WACRC,IAEDrB,MAAK,SAAAsB,GACJT,EAASS,QAER,IAEHC,QAAQC,IAAI,SAAUZ,EAAMa,OAAQ,SAEpC,IA0CMC,EAAcV,EAChBJ,EACAA,EAAMe,QAAO,SAAApC,GAAI,OAAIA,EAAKG,aAEtBkC,EAAS,WAOb,OACE,yBAAKC,MAPa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAKR,6BACA,uGAKR,OACE,6BACE,qCACA,kBAAC,EAAD,CAAcxB,QAASU,IACvB,6BACE,4BAAQrB,QAAS,kBAAMoB,GAAYD,KAAnC,QACQA,EAAU,YAAc,QAGlC,4BACGU,EAAYO,KAAI,SAAC1C,EAAM2C,GAAP,OACf,kBAAC,EAAD,CAAMC,IAAKD,EAAG3C,KAAMA,EACpBC,iBAAkB,kBAzDD,SAAAa,GAChB,6DAAyDA,GAAlE,IACMd,EAAOqB,EAAMwB,MAAK,SAAAC,GAAC,OAAIA,EAAEhC,KAAOA,KAChCiC,EAAW,2BAAQ/C,GAAR,IAAcG,WAAYH,EAAKG,YAEhD2B,EACQhB,EAAIiC,GACXtC,MAAK,SAAAuC,GACJ1B,EAASD,EAAMqB,KAAI,SAAA1C,GAAI,OAAIA,EAAKc,KAAOA,EAAKd,EAAOgD,SAEpDC,OAAM,SAAAC,GACLtB,EAAgB,SAAD,OACJ5B,EAAKK,QADD,sCAGf8C,YAAW,WACTvB,EAAgB,QACf,KACHN,EAASD,EAAMe,QAAO,SAAAU,GAAC,OAAIA,EAAEhC,KAAOA,SAwCNsC,CAAmBpD,EAAKc,WAGpD,0BAAMuC,SA5EM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBnD,QAASkB,EACTkC,MAAM,IAAIC,MAAOC,cACjBxD,UAAWyD,KAAKC,SAAW,IAG7B/B,EACQ0B,GACP/C,MAAK,SAAAuC,GACJ1B,EAASD,EAAMyC,OAAOd,IACtBxB,EAAW,SAiEX,2BACCuC,MAAOxC,EACPyC,SA1CoB,SAACV,GACxBtB,QAAQC,IAAIqB,EAAMW,OAAOF,OACzBvC,EAAW8B,EAAMW,OAAOF,UA0CpB,4BAAQG,KAAK,UAAb,SAEF,kBAAC7B,EAAD,SCrGN8B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.d399720d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important\r\n    ? 'make not important' : 'make important'\r\n\r\n  return (\r\n    <li className='note'>\r\n      {note.content} \r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n  )\r\n}\r\n  export default Note\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { \r\n  getAll, \r\n  create, \r\n  update \r\n}","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Notification","import React, { useState, useEffect } from 'react'\r\nimport Note from './components/Note'\r\nimport noteService from './services/notes'\r\nimport Notification from './components/Notification'\r\nimport './index.css'\r\n\r\nconst App = (props) => {\r\n  const [notes, setNotes] = useState([])\r\n  const [newNote, setNewNote] = useState('')\r\n  const [showAll, setShowAll] = useState(true)\r\n  const [errorMessage, setErrorMessage] = useState('some error happened...')\r\n  \r\n  useEffect(() => {\r\n    noteService\r\n  .getAll()\r\n  .then(initialNotes => {\r\n    setNotes(initialNotes)\r\n  })\r\n  }, [])\r\n  \r\n  console.log('render', notes.length, 'notes')\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault()\r\n    const noteObject = {\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: Math.random() > 0.5,\r\n    }\r\n  \r\n    noteService\r\n    .create(noteObject)\r\n    .then(returnedNote => {\r\n      setNotes(notes.concat(returnedNote))\r\n      setNewNote('')\r\n    })\r\n}\r\n\r\nconst toggleImportanceOf = id => {\r\n  const url = `http://young-thicket-43876.herokuapp.com/api/notes/${id}`\r\n  const note = notes.find(n => n.id === id)\r\n  const changedNote = { ...note, important: !note.important }\r\n\r\n  noteService\r\n  .update(id, changedNote)\r\n  .then(returnedNote => {\r\n    setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n  })\r\n  .catch(error => {\r\n    setErrorMessage(\r\n      `Note '${note.content}' was already removed from server`\r\n    )\r\n    setTimeout(() => {\r\n      setErrorMessage(null)\r\n    }, 5000)\r\n    setNotes(notes.filter(n => n.id !== id))\r\n  })\r\n}\r\n\r\n  const handleNoteChange = (event) => {\r\n    console.log(event.target.value)\r\n    setNewNote(event.target.value)\r\n  }\r\n\r\n  const notesToShow = showAll\r\n    ? notes\r\n    : notes.filter(note => note.important)\r\n\r\n    const Footer = () => {\r\n      const footerStyle = {\r\n        color: 'green',\r\n        fontStyle: 'italic',\r\n        fontSize: 16\r\n      }\r\n    \r\n      return (\r\n        <div style={footerStyle}>\r\n          <br />\r\n          <em>Note app, Department of Computer Science, University of Helsinki 2020</em>\r\n        </div>\r\n      )\r\n    }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <Notification message={errorMessage} />\r\n      <div>\r\n        <button onClick={() => setShowAll(!showAll)}>\r\n          show {showAll ? 'important' : 'all' }\r\n        </button>\r\n      </div>      \r\n      <ul>\r\n        {notesToShow.map((note, i) =>\r\n          <Note key={i} note={note}\r\n          toggleImportance={() => toggleImportanceOf(note.id)} />\r\n        )}\r\n      </ul>\r\n      <form onSubmit={addNote}>\r\n      <input\r\n       value={newNote} \r\n       onChange={handleNoteChange}\r\n       />\r\n        <button type=\"submit\">save</button>\r\n      </form>\r\n      <Footer />   \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}